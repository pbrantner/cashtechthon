package at.ac.tuwien.service;

import at.ac.tuwien.dtos.CustomerData;
import at.ac.tuwien.shared.dtos.*;
import at.ac.tuwien.shared.util.PropertiesReader;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;

import javax.annotation.PostConstruct;
import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;

@Service
public class ClassificationGeneratorImpl implements ClassificationGenerator {
    private final static Logger logger = Logger.getLogger(ClassificationGeneratorImpl.class);

    private int amountOfCustomers;
    private long secondsBetweenClassifications;
    private LocalDateTime currentDate;
    private List<String> femaleNames = new ArrayList<String>();
    private List<String> maleNames = new ArrayList<String>();
    private List<String> lastNames = new ArrayList<String>();
    private List<String> locations = new ArrayList<String>();
    private List<ExtendedClassification> classifications = new ArrayList<ExtendedClassification>();
    private List<ExtendedCustomer> customers = new ArrayList<ExtendedCustomer>();
    private Random randomGen = new Random();
    private Map<Long, CustomerData> customerDataMap = new HashMap<>();
    private int counter = 0;

    @PostConstruct
    public void init() {
        PropertiesReader pr = new PropertiesReader();
        amountOfCustomers = pr.getInt("amountOfCustomers");
        secondsBetweenClassifications = pr.getInt("secondsBetweenClassifications");

        currentDate = LocalDateTime.now();
        currentDate = currentDate.minusYears(1);

        initFemaleNames();
        initMaleNames();
        initLastNames();
        initLocations();
        initClassifications();

        initCustomers();
    }

    private void initFemaleNames() {
        femaleNames.add("Mia");
        femaleNames.add("Emma");
        femaleNames.add("Hannah");
        femaleNames.add("Sofia");
        femaleNames.add("Anna");
        femaleNames.add("Lea");
        femaleNames.add("Emilia");
        femaleNames.add("Marie");
        femaleNames.add("Lena");
        femaleNames.add("Leonie");
        femaleNames.add("Emily");
        femaleNames.add("Lina");
        femaleNames.add("Amelie");
        femaleNames.add("Sophie");
        femaleNames.add("Lilly");
        femaleNames.add("Luisa");
        femaleNames.add("Johanna");
        femaleNames.add("Laura");
        femaleNames.add("Nele");
        femaleNames.add("Lara");
        femaleNames.add("Maja");
        femaleNames.add("Charlotte");
        femaleNames.add("Clara");
        femaleNames.add("Leni");
        femaleNames.add("Sarah");
        femaleNames.add("Pia");
        femaleNames.add("Mila");
        femaleNames.add("Alina");
        femaleNames.add("Lisa");
        femaleNames.add("Lotta");
        femaleNames.add("Ida");
        femaleNames.add("Julia");
        femaleNames.add("Greta");
        femaleNames.add("Mathilda");
        femaleNames.add("Melina");
        femaleNames.add("Zoe");
        femaleNames.add("Frieda");
        femaleNames.add("Lia");
        femaleNames.add("Paula");
        femaleNames.add("Marlene");
        femaleNames.add("Ella");
        femaleNames.add("Emely");
        femaleNames.add("Jana");
        femaleNames.add("Victoria");
        femaleNames.add("Josephine");
        femaleNames.add("Finja");
        femaleNames.add("Isabell");
        femaleNames.add("Helena");
        femaleNames.add("Isabella");
        femaleNames.add("Elisa");
        femaleNames.add("Amy");
        femaleNames.add("Mara");
        femaleNames.add("Mira");
        femaleNames.add("Katharina");
        femaleNames.add("Jasmin");
        femaleNames.add("Stella");
        femaleNames.add("Lucy");
        femaleNames.add("Luise");
        femaleNames.add("Antonia");
        femaleNames.add("Annika");
        femaleNames.add("Fiona");
        femaleNames.add("Pauline");
        femaleNames.add("Nora");
        femaleNames.add("Eva");
        femaleNames.add("Jule");
        femaleNames.add("Magdalena");
        femaleNames.add("Luna");
        femaleNames.add("Merle");
        femaleNames.add("Carla");
        femaleNames.add("Maria");
        femaleNames.add("Nina");
        femaleNames.add("Theresa");
        femaleNames.add("Melissa");
        femaleNames.add("Franziska");
        femaleNames.add("Martha");
        femaleNames.add("Milena");
        femaleNames.add("Chiara");
        femaleNames.add("Ronja");
        femaleNames.add("Carlotta");
        femaleNames.add("Elena");
        femaleNames.add("Romy");
        femaleNames.add("Mina");
        femaleNames.add("Helene");
        femaleNames.add("Selina");
        femaleNames.add("Annabell");
        femaleNames.add("Paulina");
        femaleNames.add("Vanessa");
        femaleNames.add("Maila");
        femaleNames.add("Anni");
        femaleNames.add("Fabienne");
        femaleNames.add("Zoey");
        femaleNames.add("Sina");
        femaleNames.add("Miriam");
        femaleNames.add("Leila");
        femaleNames.add("Linda");
        femaleNames.add("Aylin");
        femaleNames.add("Samira");
        femaleNames.add("Elina");
        femaleNames.add("Jolina");
        femaleNames.add("Celina");
        femaleNames.add("Elisabeth");
        femaleNames.add("Valentina");
        femaleNames.add("Julie");
        femaleNames.add("Kira");
        femaleNames.add("Alissa");
        femaleNames.add("Olivia");
        femaleNames.add("Jette");
        femaleNames.add("Kim");
        femaleNames.add("Elif");
        femaleNames.add("Aaliyah");
        femaleNames.add("Ela");
        femaleNames.add("Lotte");
        femaleNames.add("Anastasia");
        femaleNames.add("Luana");
        femaleNames.add("Hailey");
        femaleNames.add("Lucia");
        femaleNames.add("Lenja");
        femaleNames.add("Rosalie");
        femaleNames.add("Vivien");
        femaleNames.add("Mona");
        femaleNames.add("Lana");
        femaleNames.add("Carolin");
        femaleNames.add("Juna");
        femaleNames.add("Elli");
        femaleNames.add("Lynn");
        femaleNames.add("Diana");
        femaleNames.add("Thea");
        femaleNames.add("Alexandra");
        femaleNames.add("Angelina");
        femaleNames.add("Carolina");
        femaleNames.add("Marla");
        femaleNames.add("Michelle");
        femaleNames.add("Tessa");
        femaleNames.add("Tabea");
        femaleNames.add("Celine");
        femaleNames.add("Leticia");
        femaleNames.add("Svea");
        femaleNames.add("Alisa");
        femaleNames.add("Marleen");
        femaleNames.add("Milla");
        femaleNames.add("Amalia");
        femaleNames.add("Joleen");
        femaleNames.add("Mariella");
        femaleNames.add("Laila");
        femaleNames.add("Liana");
        femaleNames.add("Rebecca");
        femaleNames.add("Alessia");
        femaleNames.add("Kimberly");
        femaleNames.add("Nala");
        femaleNames.add("Nelly");
        femaleNames.add("Alicia");
        femaleNames.add("Annalena");
        femaleNames.add("Emmi");
        femaleNames.add("Aurelia");
        femaleNames.add("Lene");
        femaleNames.add("Christina");
        femaleNames.add("Samantha");
        femaleNames.add("Larissa");
        femaleNames.add("Noemi");
        femaleNames.add("Dana");
        femaleNames.add("Ina");
        femaleNames.add("Evelyn");
        femaleNames.add("Maira");
        femaleNames.add("Anne");
        femaleNames.add("Natalie");
        femaleNames.add("Alma");
        femaleNames.add("Amelia");
        femaleNames.add("Giulia");
        femaleNames.add("Lorena");
        femaleNames.add("Fenja");
        femaleNames.add("Zeynep");
        femaleNames.add("Leona");
        femaleNames.add("Tilda");
        femaleNames.add("Felicitas");
        femaleNames.add("Liv");
        femaleNames.add("Liliana");
        femaleNames.add("Nisa");
        femaleNames.add("Veronika");
        femaleNames.add("Jara");
        femaleNames.add("Xenia");
        femaleNames.add("Amira");
        femaleNames.add("Linea");
        femaleNames.add("Medina");
        femaleNames.add("Tuana");
        femaleNames.add("Malia");
        femaleNames.add("Henriette");
        femaleNames.add("Jonna");
        femaleNames.add("Jessika");
        femaleNames.add("Cataleya");
        femaleNames.add("Naila");
        femaleNames.add("Valerie");
        femaleNames.add("Alexa");
        femaleNames.add("Carina");
        femaleNames.add("Dilara");
        femaleNames.add("Estelle");
        femaleNames.add("Daria");
        femaleNames.add("Joline");
        femaleNames.add("Elise");
        femaleNames.add("Helen");
        femaleNames.add("Josie");
        femaleNames.add("Rosa");
        femaleNames.add("Azra");
        femaleNames.add("Tamina");
        femaleNames.add("Ava");
        femaleNames.add("Enna");
        femaleNames.add("Bella");
        femaleNames.add("Leana");
        femaleNames.add("Melanie");
        femaleNames.add("Alena");
        femaleNames.add("Cheyenne");
        femaleNames.add("Enie");
        femaleNames.add("Melia");
        femaleNames.add("Meryem");
        femaleNames.add("Esma");
        femaleNames.add("Leandra");
        femaleNames.add("Livia");
        femaleNames.add("Selma");
        femaleNames.add("Malin");
        femaleNames.add("Nela");
        femaleNames.add("Ylvi");
        femaleNames.add("Ashley");
        femaleNames.add("Madita");
        femaleNames.add("Marina");
        femaleNames.add("Marlena");
        femaleNames.add("Janne");
        femaleNames.add("Jill");
        femaleNames.add("Maike");
        femaleNames.add("Rieke");
        femaleNames.add("Amina");
        femaleNames.add("Ayla");
        femaleNames.add("Melinda");
        femaleNames.add("Alea");
        femaleNames.add("Amilia");
        femaleNames.add("Aurora");
        femaleNames.add("Mailin");
        femaleNames.add("Elin");
        femaleNames.add("Enya");
        femaleNames.add("Florentine");
        femaleNames.add("Selin");
        femaleNames.add("Valeria");
        femaleNames.add("Annelie");
        femaleNames.add("Heidi");
        femaleNames.add("Malina");
        femaleNames.add("Nicole");
        femaleNames.add("Nika");
        femaleNames.add("Flora");
        femaleNames.add("Holly");
        femaleNames.add("Liya");
        femaleNames.add("Josefin");
        femaleNames.add("Lenia");
        femaleNames.add("Milana");
        femaleNames.add("Tamara");
        femaleNames.add("Asya");
        femaleNames.add("Freya");
        femaleNames.add("Lilian");
        femaleNames.add("Talia");
        femaleNames.add("Alice");
        femaleNames.add("Mary");
        femaleNames.add("Eliana");
        femaleNames.add("Felina");
        femaleNames.add("Hermine");
        femaleNames.add("Mathea");
        femaleNames.add("Sonja");
        femaleNames.add("Alisha");
        femaleNames.add("Soraya");
        femaleNames.add("Elaine");
        femaleNames.add("Madeleine");
        femaleNames.add("Jolie");
        femaleNames.add("Ceylin");
        femaleNames.add("Eda");
        femaleNames.add("Svenja");
        femaleNames.add("Jamie");
        femaleNames.add("Kate");
        femaleNames.add("Lilith");
        femaleNames.add("Madlen");
        femaleNames.add("Mariam");
        femaleNames.add("Miley");
        femaleNames.add("Saskia");
        femaleNames.add("Tiana");
        femaleNames.add("Abby");
        femaleNames.add("Aleyna");
        femaleNames.add("Ann");
        femaleNames.add("Edda");
        femaleNames.add("Jolien");
        femaleNames.add("Adriana");
        femaleNames.add("Cara");
        femaleNames.add("Hedi");
        femaleNames.add("Ilayda");
        femaleNames.add("Jenna");
        femaleNames.add("Miray");
        femaleNames.add("Alia");
        femaleNames.add("Elsa");
        femaleNames.add("Esila");
        femaleNames.add("Jennifer");
        femaleNames.add("Alexia");
        femaleNames.add("Ellen");
        femaleNames.add("Felicia");
        femaleNames.add("Janina");
        femaleNames.add("Joana");
        femaleNames.add("Kaja");
        femaleNames.add("Liara");
        femaleNames.add("Marit");
        femaleNames.add("Juliana");
        femaleNames.add("Juliane");
        femaleNames.add("Lilia");
        femaleNames.add("Smilla");
        femaleNames.add("Talea");
        femaleNames.add("Viola");
        femaleNames.add("Anouk");
        femaleNames.add("Charlotta");
        femaleNames.add("Jasmina");
        femaleNames.add("Levke");
        femaleNames.add("Aimee");
        femaleNames.add("Ecrin");
        femaleNames.add("Malea");
        femaleNames.add("Marieke");
        femaleNames.add("Naemi");
        femaleNames.add("Adelina");
        femaleNames.add("Mathilde");
        femaleNames.add("Melek");
        femaleNames.add("Melisa");
        femaleNames.add("Naomi");
        femaleNames.add("Nike");
        femaleNames.add("Philine");
        femaleNames.add("Shania");
        femaleNames.add("Verena");
        femaleNames.add("Cora");
        femaleNames.add("Felia");
        femaleNames.add("Malou");
        femaleNames.add("Patricia");
        femaleNames.add("Bianca");
        femaleNames.add("Claire");
        femaleNames.add("Delia");
        femaleNames.add("Friederike");
        femaleNames.add("Giuliana");
        femaleNames.add("Yagmur");
        femaleNames.add("Cassandra");
        femaleNames.add("Joy");
        femaleNames.add("Loreen");
        femaleNames.add("Sena");
        femaleNames.add("Tara");
        femaleNames.add("Ceyda");
        femaleNames.add("Eslem");
        femaleNames.add("Helin");
        femaleNames.add("Jona");
        femaleNames.add("Lola");
        femaleNames.add("Malena");
        femaleNames.add("Melody");
        femaleNames.add("Romina");
        femaleNames.add("Anja");
        femaleNames.add("Fatima");
        femaleNames.add("Zara");
        femaleNames.add("Zehra");
        femaleNames.add("Annemarie");
        femaleNames.add("Cecilia");
        femaleNames.add("Dalia");
        femaleNames.add("Elea");
        femaleNames.add("Ellie");
        femaleNames.add("Katja");
        femaleNames.add("Melis");
        femaleNames.add("Stefanie");
        femaleNames.add("Tina");
        femaleNames.add("Feyza");
        femaleNames.add("Fine");
        femaleNames.add("Josephina");
        femaleNames.add("Vivian");
        femaleNames.add("Adele");
        femaleNames.add("Alva");
        femaleNames.add("Eleni");
        femaleNames.add("Eliza");
        femaleNames.add("Enni");
        femaleNames.add("Franka");
        femaleNames.add("Janna");
        femaleNames.add("Maileen");
        femaleNames.add("Maxi");
        femaleNames.add("Sidney");
        femaleNames.add("Ada");
        femaleNames.add("Amara");
        femaleNames.add("Inga");
        femaleNames.add("Leia");
        femaleNames.add("Liz");
        femaleNames.add("Lou");
        femaleNames.add("Lydia");
        femaleNames.add("Marisa");
        femaleNames.add("Sila");
        femaleNames.add("Stina");
        femaleNames.add("Tamia");
        femaleNames.add("Alara");
        femaleNames.add("Anisa");
        femaleNames.add("Cleo");
        femaleNames.add("Megan");
        femaleNames.add("Nea");
        femaleNames.add("Penelope");
        femaleNames.add("ZÃ¼mra");
        femaleNames.add("Beyza");
        femaleNames.add("Charleen");
        femaleNames.add("Femke");
        femaleNames.add("Henrieke");
        femaleNames.add("Jamila");
        femaleNames.add("Jenny");
        femaleNames.add("Mirja");
        femaleNames.add("Nila");
        femaleNames.add("Salome");
        femaleNames.add("Sandra");
        femaleNames.add("Alessa");
        femaleNames.add("Christin");
        femaleNames.add("Evelina");
        femaleNames.add("Joyce");
        femaleNames.add("Kiana");
        femaleNames.add("Line");
        femaleNames.add("Natalia");
        femaleNames.add("Ria");
        femaleNames.add("Tanja");
        femaleNames.add("Betty");
        femaleNames.add("Davina");
        femaleNames.add("Defne");
        femaleNames.add("Denise");
        femaleNames.add("Dila");
        femaleNames.add("Eleonora");
        femaleNames.add("Gloria");
        femaleNames.add("Judith");
        femaleNames.add("Julika");
        femaleNames.add("KÃ¤the");
        femaleNames.add("Katrin");
        femaleNames.add("Laureen");
        femaleNames.add("Leonora");
        femaleNames.add("Lisbeth");
        femaleNames.add("Luzi");
        femaleNames.add("Maxima");
        femaleNames.add("Neyla");
        femaleNames.add("Nisanur");
        femaleNames.add("Phoebe");
        femaleNames.add("Ruby");
        femaleNames.add("Sabrina");
        femaleNames.add("Vera");
        femaleNames.add("Ziva");
        femaleNames.add("Abigail");
        femaleNames.add("Alya");
        femaleNames.add("Andrea");
        femaleNames.add("Ariana");
        femaleNames.add("Belinay");
        femaleNames.add("Fanny");
        femaleNames.add("Ivy");
        femaleNames.add("Joanna");
        femaleNames.add("Jolin");
        femaleNames.add("Lavin");
        femaleNames.add("Maren");
        femaleNames.add("Melike");
        femaleNames.add("Nia");
        femaleNames.add("Nova");
        femaleNames.add("Saphira");
        femaleNames.add("Tia");
        femaleNames.add("Amanda");
        femaleNames.add("Ariane");
        femaleNames.add("Arina");
        femaleNames.add("Dorothea");
        femaleNames.add("Emina");
        femaleNames.add("Feline");
        femaleNames.add("Julina");
        femaleNames.add("Lieselotte");
        femaleNames.add("Luca");
        femaleNames.add("Mette");
        femaleNames.add("Narin");
        femaleNames.add("Nilay");
        femaleNames.add("Philippa");
        femaleNames.add("Polly");
        femaleNames.add("Rafaela");
        femaleNames.add("Ruth");
        femaleNames.add("Sharon");
        femaleNames.add("Summer");
        femaleNames.add("Clarissa");
        femaleNames.add("Elanur");
        femaleNames.add("Esther");
        femaleNames.add("Isa");
        femaleNames.add("Liyana");
        femaleNames.add("Nadine");
        femaleNames.add("Sarina");
        femaleNames.add("Serafina");
        femaleNames.add("Violetta");
        femaleNames.add("Yasmina");
        femaleNames.add("Ylva");
        femaleNames.add("Acelya");
        femaleNames.add("Anita");
        femaleNames.add("Annabella");
        femaleNames.add("Ceren");
        femaleNames.add("Damla");
        femaleNames.add("Fatma");
        femaleNames.add("Fina");
        femaleNames.add("Frederike");
        femaleNames.add("Grace");
        femaleNames.add("Lale");
        femaleNames.add("Leevke");
        femaleNames.add("Mareike");
        femaleNames.add("Mieke");
        femaleNames.add("Rahel");
        femaleNames.add("Stine");
        femaleNames.add("Timea");
        femaleNames.add("Wiebke");
        femaleNames.add("Alicja");
        femaleNames.add("Anneke");
    }

    private void initMaleNames() {
        maleNames.add("Ben");
        maleNames.add("Luca");
        maleNames.add("Paul");
        maleNames.add("Jonas");
        maleNames.add("Finn");
        maleNames.add("Leon");
        maleNames.add("Luis");
        maleNames.add("Lukas");
        maleNames.add("Maximilian");
        maleNames.add("Felix");
        maleNames.add("Noah");
        maleNames.add("Elias");
        maleNames.add("Julian");
        maleNames.add("Max");
        maleNames.add("Tim");
        maleNames.add("Moritz");
        maleNames.add("Henry");
        maleNames.add("Niklas");
        maleNames.add("Philipp");
        maleNames.add("Jakob");
        maleNames.add("Tom");
        maleNames.add("Jan");
        maleNames.add("Emil");
        maleNames.add("Alexander");
        maleNames.add("David");
        maleNames.add("Oskar");
        maleNames.add("Fabian");
        maleNames.add("Anton");
        maleNames.add("Erik");
        maleNames.add("Rafael");
        maleNames.add("Matteo");
        maleNames.add("Leo");
        maleNames.add("Mats");
        maleNames.add("Simon");
        maleNames.add("Jannik");
        maleNames.add("Lennard");
        maleNames.add("Liam");
        maleNames.add("Linus");
        maleNames.add("Hannes");
        maleNames.add("Mika");
        maleNames.add("Vincent");
        maleNames.add("Adrian");
        maleNames.add("Jonathan");
        maleNames.add("Theo");
        maleNames.add("Nico");
        maleNames.add("Till");
        maleNames.add("Benjamin");
        maleNames.add("Florian");
        maleNames.add("Marlon");
        maleNames.add("Julius");
        maleNames.add("Nick");
        maleNames.add("Samuel");
        maleNames.add("Nils");
        maleNames.add("Johannes");
        maleNames.add("Jona");
        maleNames.add("Carl");
        maleNames.add("Daniel");
        maleNames.add("Lennox");
        maleNames.add("Aaron");
        maleNames.add("Mattis");
        maleNames.add("Ole");
        maleNames.add("Leonard");
        maleNames.add("Constantin");
        maleNames.add("Sebastian");
        maleNames.add("Jannis");
        maleNames.add("Colin");
        maleNames.add("Joel");
        maleNames.add("Tobias");
        maleNames.add("Lenny");
        maleNames.add("Milan");
        maleNames.add("Johann");
        maleNames.add("Joshua");
        maleNames.add("Dominic");
        maleNames.add("Maxim");
        maleNames.add("John");
        maleNames.add("Mohammed");
        maleNames.add("Timo");
        maleNames.add("Robin");
        maleNames.add("Valentin");
        maleNames.add("Jayden");
        maleNames.add("Benedikt");
        maleNames.add("Justus");
        maleNames.add("Levin");
        maleNames.add("Damian");
        maleNames.add("Phil");
        maleNames.add("Toni");
        maleNames.add("Levi");
        maleNames.add("Jamie");
        maleNames.add("Lian");
        maleNames.add("Kilian");
        maleNames.add("Malte");
        maleNames.add("Noel");
        maleNames.add("Jason");
        maleNames.add("Bennet");
        maleNames.add("Tyler");
        maleNames.add("Gabriel");
        maleNames.add("Sam");
        maleNames.add("Michael");
        maleNames.add("Artur");
        maleNames.add("Bastian");
        maleNames.add("Bruno");
        maleNames.add("Lasse");
        maleNames.add("Marc");
        maleNames.add("Pepe");
        maleNames.add("Luke");
        maleNames.add("Oliver");
        maleNames.add("Marvin");
        maleNames.add("Emilio");
        maleNames.add("Silas");
        maleNames.add("Emir");
        maleNames.add("Lars");
        maleNames.add("Leopold");
        maleNames.add("Richard");
        maleNames.add("Lias");
        maleNames.add("Elia");
        maleNames.add("Matti");
        maleNames.add("Theodor");
        maleNames.add("Christian");
        maleNames.add("Jannes");
        maleNames.add("Tristan");
        maleNames.add("Leandro");
        maleNames.add("Marcel");
        maleNames.add("Frederik");
        maleNames.add("Connor");
        maleNames.add("Manuel");
        maleNames.add("Dean");
        maleNames.add("Adam");
        maleNames.add("Diego");
        maleNames.add("Piet");
        maleNames.add("Franz");
        maleNames.add("Fritz");
        maleNames.add("Hugo");
        maleNames.add("Michel");
        maleNames.add("Ilias");
        maleNames.add("Nicolas");
        maleNames.add("Matthias");
        maleNames.add("Dennis");
        maleNames.add("Jeremy");
        maleNames.add("Neo");
        maleNames.add("Finnley");
        maleNames.add("Marco");
        maleNames.add("Pascal");
        maleNames.add("Fabio");
        maleNames.add("Ludwig");
        maleNames.add("Malik");
        maleNames.add("Nikita");
        maleNames.add("Henrik");
        maleNames.add("Lionel");
        maleNames.add("Martin");
        maleNames.add("Clemens");
        maleNames.add("Lorenz");
        maleNames.add("Milo");
        maleNames.add("Ian");
        maleNames.add("Len");
        maleNames.add("Arne");
        maleNames.add("Emilian");
        maleNames.add("Yusuf");
        maleNames.add("Lio");
        maleNames.add("Jasper");
        maleNames.add("Lion");
        maleNames.add("Maik");
        maleNames.add("Ferdinand");
        maleNames.add("Thomas");
        maleNames.add("Bela");
        maleNames.add("Konrad");
        maleNames.add("Marius");
        maleNames.add("Hendrik");
        maleNames.add("Julien");
        maleNames.add("Eddi");
        maleNames.add("Friedrich");
        maleNames.add("Can");
        maleNames.add("Ali");
        maleNames.add("Berat");
        maleNames.add("Maurice");
        maleNames.add("Andreas");
        maleNames.add("Taylor");
        maleNames.add("Kevin");
        maleNames.add("Alessio");
        maleNames.add("Kai");
        maleNames.add("Laurens");
        maleNames.add("Patrick");
        maleNames.add("Laurin");
        maleNames.add("Janne");
        maleNames.add("Justin");
        maleNames.add("Markus");
        maleNames.add("Carlo");
        maleNames.add("Kian");
        maleNames.add("Leonardo");
        maleNames.add("Willi");
        maleNames.add("Benno");
        maleNames.add("Devin");
        maleNames.add("Luan");
        maleNames.add("Gustav");
        maleNames.add("Leonhard");
        maleNames.add("Mert");
        maleNames.add("Chris");
        maleNames.add("Thore");
        maleNames.add("Leander");
        maleNames.add("Magnus");
        maleNames.add("Robert");
        maleNames.add("Nevio");
        maleNames.add("Ryan");
        maleNames.add("Yasin");
        maleNames.add("Fiete");
        maleNames.add("Henning");
        maleNames.add("Arian");
        maleNames.add("Roman");
        maleNames.add("Korbinian");
        maleNames.add("Carlos");
        maleNames.add("Jonte");
        maleNames.add("Alessandro");
        maleNames.add("Peter");
        maleNames.add("Deniz");
        maleNames.add("Nino");
        maleNames.add("Alex");
        maleNames.add("Antonio");
        maleNames.add("Mailo");
        maleNames.add("Brian");
        maleNames.add("Amir");
        maleNames.add("Christopher");
        maleNames.add("Thilo");
        maleNames.add("Charlie");
        maleNames.add("Damien");
        maleNames.add("Mehmet");
        maleNames.add("Ricardo");
        maleNames.add("Curt");
        maleNames.add("Dario");
        maleNames.add("Joris");
        maleNames.add("Victor");
        maleNames.add("Darian");
        maleNames.add("Josef");
        maleNames.add("Christoph");
        maleNames.add("Georg");
        maleNames.add("Jack");
        maleNames.add("Kaan");
        maleNames.add("Mick");
        maleNames.add("Enno");
        maleNames.add("Kjell");
        maleNames.add("Aiden");
        maleNames.add("Domenic");
        maleNames.add("Jesper");
        maleNames.add("Enes");
        maleNames.add("ömer");
        maleNames.add("Titus");
        maleNames.add("Hamza");
        maleNames.add("Mustafa");
        maleNames.add("Mikail");
        maleNames.add("Torben");
        maleNames.add("Jaron");
        maleNames.add("Ruben");
        maleNames.add("Bjarne");
        maleNames.add("Miran");
        maleNames.add("Stefan");
        maleNames.add("Claas");
        maleNames.add("Sascha");
        maleNames.add("Tammo");
        maleNames.add("Cedric");
        maleNames.add("Edgar");
        maleNames.add("Jerome");
        maleNames.add("Leif");
        maleNames.add("Leonas");
        maleNames.add("Lino");
        maleNames.add("Romeo");
        maleNames.add("Andre");
        maleNames.add("Nathan");
        maleNames.add("Tino");
        maleNames.add("William");
        maleNames.add("Hanno");
        maleNames.add("Sami");
        maleNames.add("Ahmet");
        maleNames.add("Miguel");
        maleNames.add("Steven");
        maleNames.add("Emin");
        maleNames.add("Lean");
        maleNames.add("Mirac");
        maleNames.add("Semih");
        maleNames.add("Sinan");
        maleNames.add("Etienne");
        maleNames.add("Ibrahim");
        maleNames.add("Mario");
        maleNames.add("Timon");
        maleNames.add("Xaver");
        maleNames.add("Armin");
        maleNames.add("Efe");
        maleNames.add("Janosch");
        maleNames.add("Kerem");
        maleNames.add("Mio");
        maleNames.add("Wilhelm");
        maleNames.add("Albert");
        maleNames.add("Erwin");
        maleNames.add("Hans");
        maleNames.add("Marian");
        maleNames.add("Anthony");
        maleNames.add("Cem");
        maleNames.add("Emre");
        maleNames.add("Eymen");
        maleNames.add("Leonidas");
        maleNames.add("Aras");
        maleNames.add("Ensar");
        maleNames.add("Kenan");
        maleNames.add("Kuzey");
        maleNames.add("Lutz");
        maleNames.add("Selim");
        maleNames.add("Tamme");
        maleNames.add("Valentino");
        maleNames.add("Danny");
        maleNames.add("Emanuel");
        maleNames.add("Giuliano");
        maleNames.add("Hassan");
        maleNames.add("Kerim");
        maleNames.add("Umut");
        maleNames.add("Amin");
        maleNames.add("Arda");
        maleNames.add("Danilo");
        maleNames.add("Eren");
        maleNames.add("Mattes");
        maleNames.add("Vince");
        maleNames.add("Arvid");
        maleNames.add("Darius");
        maleNames.add("Dustin");
        maleNames.add("Jake");
        maleNames.add("Jarne");
        maleNames.add("Jim");
        maleNames.add("Marten");
        maleNames.add("Sean");
        maleNames.add("James");
        maleNames.add("Jean");
        maleNames.add("Lucien");
        maleNames.add("Rayan");
        maleNames.add("Elian");
        maleNames.add("Emirhan");
        maleNames.add("Furkan");
        maleNames.add("Jonne");
        maleNames.add("Kalle");
        maleNames.add("Karim");
        maleNames.add("Milian");
        maleNames.add("Timur");
        maleNames.add("Damon");
        maleNames.add("Enrico");
        maleNames.add("Marek");
        maleNames.add("Quentin");
        maleNames.add("Alwin");
        maleNames.add("Angelo");
        maleNames.add("Jesse");
        maleNames.add("Otto");
        maleNames.add("Samir");
        maleNames.add("Yassin");
        maleNames.add("Bilal");
        maleNames.add("Caspar");
        maleNames.add("Jannek");
        maleNames.add("Jarno");
        maleNames.add("Maddox");
        maleNames.add("Mahir");
        maleNames.add("Marlo");
        maleNames.add("Rico");
        maleNames.add("Tjark");
        maleNames.add("Elija");
        maleNames.add("Iven");
        maleNames.add("Joscha");
        maleNames.add("Nikolai");
        maleNames.add("Rocco");
        maleNames.add("Sven");
        maleNames.add("Berkay");
        maleNames.add("Dion");
        maleNames.add("Gregor");
        maleNames.add("Jano");
        maleNames.add("Koray");
        maleNames.add("Ramon");
        maleNames.add("Sandro");
        maleNames.add("Taylan");
        maleNames.add("Davin");
        maleNames.add("Francesco");
        maleNames.add("Jamal");
        maleNames.add("Jordan");
        maleNames.add("Lewis");
        maleNames.add("Omar");
        maleNames.add("Pius");
        maleNames.add("Taha");
        maleNames.add("Veit");
        maleNames.add("Amar");
        maleNames.add("Eduard");
        maleNames.add("Gianluca");
        maleNames.add("Ismail");
        maleNames.add("Joost");
        maleNames.add("Lucian");
        maleNames.add("Miko");
        maleNames.add("Sirac");
        maleNames.add("Thies");
        maleNames.add("Alfred");
        maleNames.add("Dylan");
        maleNames.add("Eray");
        maleNames.add("Flynn");
        maleNames.add("Hauke");
        maleNames.add("Logan");
        maleNames.add("Melvin");
        maleNames.add("Younes");
        maleNames.add("Ilja");
        maleNames.add("Jon");
        maleNames.add("Mete");
        maleNames.add("Tamino");
        maleNames.add("Alan");
        maleNames.add("Arjen");
        maleNames.add("Jenke");
        maleNames.add("Johnny");
        maleNames.add("Keno");
        maleNames.add("Loris");
        maleNames.add("Milow");
        maleNames.add("Santino");
        maleNames.add("Tiago");
        maleNames.add("Burak");
        maleNames.add("Fabrizio");
        maleNames.add("Gian");
        maleNames.add("Hennes");
        maleNames.add("Kirill");
        maleNames.add("Lorik");
        maleNames.add("Luiz");
        maleNames.add("Peer");
        maleNames.add("Talha");
        maleNames.add("Tizian");
        maleNames.add("Tommy");
        maleNames.add("Yunus");
        maleNames.add("Aidan");
        maleNames.add("Baran");
        maleNames.add("Björn");
        maleNames.add("Cornelius");
        maleNames.add("Dorian");
        maleNames.add("Hagen");
        maleNames.add("Leano");
        maleNames.add("Quinn");
        maleNames.add("Youssef");
        maleNames.add("Benny");
        maleNames.add("Bent");
        maleNames.add("Ege");
        maleNames.add("Gero");
        maleNames.add("Ivan");
        maleNames.add("Kimi");
        maleNames.add("Levent");
        maleNames.add("Luuk");
        maleNames.add("Maris");
        maleNames.add("Miro");
        maleNames.add("SÃ¶ren");
        maleNames.add("Stanley");
        maleNames.add("Vito");
        maleNames.add("Yigit");
        maleNames.add("Batuhan");
        maleNames.add("Edwin");
        maleNames.add("Jakub");
        maleNames.add("Juri");
        maleNames.add("Kiyan");
        maleNames.add("Meo");
        maleNames.add("Musa");
        maleNames.add("Raul");
        maleNames.add("Ron");
        maleNames.add("Rezgar");
        maleNames.add("Said");
        maleNames.add("Sammy");
        maleNames.add("Santiago");
        maleNames.add("Severin");
        maleNames.add("Adem");
        maleNames.add("Adriano");
        maleNames.add("Alexandros");
        maleNames.add("Ansgar");
        maleNames.add("August");
        maleNames.add("Bo");
        maleNames.add("Dejan");
        maleNames.add("Eyap");
        maleNames.add("Fridolin");
        maleNames.add("Huseyin");
        maleNames.add("Ilay");
        maleNames.add("Jay");
        maleNames.add("Jimmy");
        maleNames.add("Josua");
        maleNames.add("Merlin");
        maleNames.add("Nathanael");
        maleNames.add("Quirin");
        maleNames.add("Azad");
        maleNames.add("Davide");
        maleNames.add("Denny");
        maleNames.add("Evan");
        maleNames.add("Giuseppe");
        maleNames.add("Jari");
        maleNames.add("Jascha");
        maleNames.add("Neven");
        maleNames.add("Pierre");
        maleNames.add("Rick");
        maleNames.add("Tarik");
        maleNames.add("Vinzenz");
        maleNames.add("Ahmad");
        maleNames.add("Amon");
        maleNames.add("Andrej");
        maleNames.add("Aurel");
        maleNames.add("Bosse");
        maleNames.add("Demian");
        maleNames.add("Ethan");
        maleNames.add("Joe");
        maleNames.add("Joey");
        maleNames.add("Nelio");
        maleNames.add("Rene");
        maleNames.add("Salvatore");
        maleNames.add("Simeon");
    }

    private void initLastNames() {
        lastNames.add("Müller");
        lastNames.add("Schmidt");
        lastNames.add("Schneider");
        lastNames.add("Fischer");
        lastNames.add("Weber");
        lastNames.add("Meyer");
        lastNames.add("Wagner");
        lastNames.add("Becker");
        lastNames.add("Schulz");
        lastNames.add("Hoffmann");
        lastNames.add("Schäfer");
        lastNames.add("Bauer");
        lastNames.add("Koch");
        lastNames.add("Richter");
        lastNames.add("Klein");
        lastNames.add("Wolf");
        lastNames.add("Schröder");
        lastNames.add("Neumann");
        lastNames.add("Schwarz");
        lastNames.add("Braun");
        lastNames.add("Hofmann");
        lastNames.add("Zimmermann");
        lastNames.add("Schmitt");
        lastNames.add("Hartmann");
        lastNames.add("Krüger");
        lastNames.add("Schmid");
        lastNames.add("Werner");
        lastNames.add("Lange");
        lastNames.add("Schmitz");
        lastNames.add("Meier");
        lastNames.add("Krause");
        lastNames.add("Maier");
        lastNames.add("Lehmann");
        lastNames.add("Huber");
        lastNames.add("Mayer");
        lastNames.add("Herrmann");
        lastNames.add("Köhler");
        lastNames.add("Walter");
        lastNames.add("König");
        lastNames.add("Schulze");
        lastNames.add("Fuchs");
        lastNames.add("Kaiser");
        lastNames.add("Lang");
        lastNames.add("Weiß");
        lastNames.add("Peters");
        lastNames.add("Scholz");
        lastNames.add("Jung");
        lastNames.add("Möller");
        lastNames.add("Hahn");
        lastNames.add("Keller");
        lastNames.add("Vogel");
        lastNames.add("Schubert");
        lastNames.add("Roth");
        lastNames.add("Frank");
        lastNames.add("Friedrich");
        lastNames.add("Beck");
        lastNames.add("Günther");
        lastNames.add("Berger");
        lastNames.add("Winkler");
        lastNames.add("Lorenz");
        lastNames.add("Baumann");
        lastNames.add("Schuster");
        lastNames.add("Kraus");
        lastNames.add("Böhm");
        lastNames.add("Simon");
        lastNames.add("Franke");
        lastNames.add("Albrecht");
        lastNames.add("Winter");
        lastNames.add("Ludwig");
        lastNames.add("Martin");
        lastNames.add("Krämer");
        lastNames.add("Schumacher");
        lastNames.add("Vogt");
        lastNames.add("Jäger");
        lastNames.add("Stein");
        lastNames.add("Otto");
        lastNames.add("Groß");
        lastNames.add("Sommer");
        lastNames.add("Haas");
        lastNames.add("Graf");
        lastNames.add("Heinrich");
        lastNames.add("Seidel");
        lastNames.add("Schreiber");
        lastNames.add("Ziegler");
        lastNames.add("Brandt");
        lastNames.add("Kuhn");
        lastNames.add("Schulte");
        lastNames.add("Dietrich");
        lastNames.add("Kühn");
        lastNames.add("Engel");
        lastNames.add("Pohl");
        lastNames.add("Horn");
        lastNames.add("Sauer");
        lastNames.add("Arnold");
        lastNames.add("Thomas");
        lastNames.add("Bergmann");
        lastNames.add("Busch");
        lastNames.add("Pfeiffer");
        lastNames.add("Voigt");
        lastNames.add("Götz");
        lastNames.add("Seifert");
        lastNames.add("Lindner");
        lastNames.add("Ernst");
        lastNames.add("Hübner");
        lastNames.add("Kramer");
        lastNames.add("Franz");
        lastNames.add("Beyer");
        lastNames.add("Wolff");
        lastNames.add("Peter");
        lastNames.add("Jansen");
        lastNames.add("Kern");
        lastNames.add("Barth");
        lastNames.add("Wenzel");
        lastNames.add("Hermann");
        lastNames.add("Ott");
        lastNames.add("Paul");
        lastNames.add("Riedel");
        lastNames.add("Wilhelm");
        lastNames.add("Hansen");
        lastNames.add("Nagel");
        lastNames.add("Grimm");
        lastNames.add("Lenz");
        lastNames.add("Ritter");
        lastNames.add("Bock");
        lastNames.add("Langer");
        lastNames.add("Kaufmann");
        lastNames.add("Mohr");
        lastNames.add("Förster");
        lastNames.add("Zimmer");
        lastNames.add("Haase");
        lastNames.add("Lutz");
        lastNames.add("Kruse");
        lastNames.add("Jahn");
        lastNames.add("Schumann");
        lastNames.add("Fiedler");
        lastNames.add("Thiel");
        lastNames.add("Hoppe");
        lastNames.add("Kraft");
        lastNames.add("Michel");
        lastNames.add("Marx");
        lastNames.add("Fritz");
        lastNames.add("Arndt");
        lastNames.add("Eckert");
        lastNames.add("Schütz");
        lastNames.add("Walther");
        lastNames.add("Petersen");
        lastNames.add("Berg");
        lastNames.add("Schindler");
        lastNames.add("Kunz");
        lastNames.add("Reuter");
        lastNames.add("Sander");
        lastNames.add("Schilling");
        lastNames.add("Reinhardt");
        lastNames.add("Frey");
        lastNames.add("Ebert");
        lastNames.add("Böttcher");
        lastNames.add("Thiele");
        lastNames.add("Gruber");
        lastNames.add("Schramm");
        lastNames.add("Hein");
        lastNames.add("Bayer");
        lastNames.add("Fröhlich");
        lastNames.add("Voß");
        lastNames.add("Herzog");
        lastNames.add("Hesse");
        lastNames.add("Maurer");
        lastNames.add("Rudolph");
        lastNames.add("Nowak");
        lastNames.add("Geiger");
        lastNames.add("Beckmann");
        lastNames.add("Kunze");
        lastNames.add("Seitz");
        lastNames.add("Stephan");
        lastNames.add("Büttner");
        lastNames.add("Bender");
        lastNames.add("Gärtner");
        lastNames.add("Bachmann");
        lastNames.add("Behrens");
        lastNames.add("Scherer");
        lastNames.add("Adam");
        lastNames.add("Stahl");
        lastNames.add("Steiner");
        lastNames.add("Kurz");
        lastNames.add("Dietz");
        lastNames.add("Brunner");
        lastNames.add("Witt");
        lastNames.add("Moser");
        lastNames.add("Fink");
        lastNames.add("Ullrich");
        lastNames.add("Kirchner");
        lastNames.add("Löffler");
        lastNames.add("Heinz");
        lastNames.add("Schultz");
        lastNames.add("Ulrich");
        lastNames.add("Reichert");
        lastNames.add("Schwab");
        lastNames.add("Breuer");
        lastNames.add("Gerlach");
        lastNames.add("Brinkmann");
        lastNames.add("Göbel");
        lastNames.add("Blum");
        lastNames.add("Brand");
        lastNames.add("Naumann");
        lastNames.add("Stark");
        lastNames.add("Wirth");
        lastNames.add("Schenk");
        lastNames.add("Binder");
        lastNames.add("Körner");
        lastNames.add("Schlüter");
        lastNames.add("Rieger");
        lastNames.add("Urban");
        lastNames.add("Böhme");
        lastNames.add("Jakob");
        lastNames.add("Schröter");
        lastNames.add("Krebs");
        lastNames.add("Wegner");
        lastNames.add("Heller");
        lastNames.add("Kopp");
        lastNames.add("Link");
        lastNames.add("Wittmann");
        lastNames.add("Unger");
        lastNames.add("Reimann");
        lastNames.add("Ackermann");
        lastNames.add("Hirsch");
        lastNames.add("Schiller");
        lastNames.add("Döring");
        lastNames.add("May");
        lastNames.add("Bruns");
        lastNames.add("Wendt");
        lastNames.add("Wolter");
        lastNames.add("Menzel");
        lastNames.add("Pfeifer");
        lastNames.add("Sturm");
        lastNames.add("Buchholz");
        lastNames.add("Rose");
        lastNames.add("Meißner");
        lastNames.add("Janssen");
        lastNames.add("Bach");
        lastNames.add("Engelhardt");
        lastNames.add("Bischoff");
        lastNames.add("Bartsch");
        lastNames.add("John");
        lastNames.add("Kohl");
        lastNames.add("Kolb");
        lastNames.add("Münch");
        lastNames.add("Vetter");
        lastNames.add("Hildebrandt");
        lastNames.add("Renner");
        lastNames.add("Weiss");
        lastNames.add("Kiefer");
        lastNames.add("Rau");
        lastNames.add("Hinz");
        lastNames.add("Wilke");
        lastNames.add("Gebhardt");
        lastNames.add("Siebert");
        lastNames.add("Baier");
        lastNames.add("Köster");
        lastNames.add("Rohde");
        lastNames.add("Will");
        lastNames.add("Fricke");
        lastNames.add("Freitag");
        lastNames.add("Nickel");
        lastNames.add("Reich");
        lastNames.add("Funk");
        lastNames.add("Linke");
        lastNames.add("Keil");
        lastNames.add("Hennig");
        lastNames.add("Witte");
        lastNames.add("Stoll");
        lastNames.add("Schreiner");
        lastNames.add("Held");
        lastNames.add("Noack");
        lastNames.add("Brückner");
        lastNames.add("Decker");
        lastNames.add("Neubauer");
        lastNames.add("Westphal");
        lastNames.add("Heinze");
        lastNames.add("Baum");
        lastNames.add("Schön");
        lastNames.add("Wimmer");
        lastNames.add("Marquardt");
        lastNames.add("Stadler");
        lastNames.add("Schlegel");
        lastNames.add("Kremer");
        lastNames.add("Ahrens");
        lastNames.add("Hammer");
        lastNames.add("Röder");
        lastNames.add("Pieper");
        lastNames.add("Kirsch");
        lastNames.add("Fuhrmann");
        lastNames.add("Henning");
        lastNames.add("Krug");
        lastNames.add("Popp");
        lastNames.add("Conrad");
        lastNames.add("Karl");
        lastNames.add("Krieger");
        lastNames.add("Mann");
        lastNames.add("Wiedemann");
        lastNames.add("Lemke");
        lastNames.add("Erdmann");
        lastNames.add("Mertens");
        lastNames.add("Heß");
        lastNames.add("Esser");
        lastNames.add("Hanke");
        lastNames.add("Strauß");
        lastNames.add("Miller");
        lastNames.add("Berndt");
        lastNames.add("Konrad");
        lastNames.add("Jacob");
        lastNames.add("Philipp");
        lastNames.add("Metzger");
        lastNames.add("Henke");
        lastNames.add("Wiese");
        lastNames.add("Hauser");
        lastNames.add("Dittrich");
        lastNames.add("Albert");
        lastNames.add("Klose");
        lastNames.add("Bader");
        lastNames.add("Herbst");
        lastNames.add("Henkel");
        lastNames.add("Kröger");
        lastNames.add("Wahl");
        lastNames.add("Bartels");
        lastNames.add("Harms");
        lastNames.add("Fritsch");
        lastNames.add("Adler");
        lastNames.add("Großmann");
        lastNames.add("Burger");
        lastNames.add("Schrader");
        lastNames.add("Probst");
        lastNames.add("Martens");
        lastNames.add("Baur");
        lastNames.add("Burkhardt");
        lastNames.add("Hess");
        lastNames.add("Mayr");
        lastNames.add("Nolte");
        lastNames.add("Heine");
        lastNames.add("Kuhlmann");
        lastNames.add("Klaus");
        lastNames.add("Kühne");
        lastNames.add("Kluge");
        lastNames.add("Bernhardt");
        lastNames.add("Blank");
        lastNames.add("Hamann");
        lastNames.add("Steffen");
        lastNames.add("Brenner");
        lastNames.add("Rauch");
        lastNames.add("Reiter");
        lastNames.add("Preuß");
        lastNames.add("Jost");
        lastNames.add("Wild");
        lastNames.add("Hummel");
        lastNames.add("Beier");
        lastNames.add("Krauß");
        lastNames.add("Lindemann");
        lastNames.add("Herold");
        lastNames.add("Christ");
        lastNames.add("Niemann");
        lastNames.add("Funke");
        lastNames.add("Haupt");
        lastNames.add("Janßen");
        lastNames.add("Vollmer");
        lastNames.add("Straub");
        lastNames.add("Strobel");
        lastNames.add("Wiegand");
        lastNames.add("Merz");
        lastNames.add("Haag");
        lastNames.add("Holz");
        lastNames.add("Knoll");
        lastNames.add("Zander");
        lastNames.add("Rausch");
        lastNames.add("Bode");
        lastNames.add("Beer");
        lastNames.add("Betz");
        lastNames.add("Anders");
        lastNames.add("Wetzel");
        lastNames.add("Hartung");
        lastNames.add("Glaser");
        lastNames.add("Fleischer");
        lastNames.add("Rupp");
        lastNames.add("Reichel");
        lastNames.add("Lohmann");
        lastNames.add("Diehl");
        lastNames.add("Jordan");
        lastNames.add("Eder");
        lastNames.add("Rothe");
        lastNames.add("Weis");
        lastNames.add("Heinemann");
        lastNames.add("Dörr");
        lastNames.add("Metz");
        lastNames.add("Kroll");
        lastNames.add("Freund");
        lastNames.add("Wegener");
        lastNames.add("Hohmann");
        lastNames.add("Geißler");
        lastNames.add("Schüler");
        lastNames.add("Schade");
        lastNames.add("Raab");
        lastNames.add("Feldmann");
        lastNames.add("Zeller");
        lastNames.add("Neubert");
        lastNames.add("Rapp");
        lastNames.add("Kessler");
        lastNames.add("Heck");
        lastNames.add("Meister");
        lastNames.add("Stock");
        lastNames.add("Römer");
        lastNames.add("Seiler");
        lastNames.add("Altmann");
        lastNames.add("Behrendt");
        lastNames.add("Jacobs");
        lastNames.add("Mai");
        lastNames.add("Bär");
        lastNames.add("Wunderlich");
        lastNames.add("Schütte");
        lastNames.add("Lauer");
        lastNames.add("Benz");
        lastNames.add("Weise");
        lastNames.add("Völker");
        lastNames.add("Sonntag");
        lastNames.add("Bühler");
        lastNames.add("Gerber");
        lastNames.add("Kellner");
        lastNames.add("Bittner");
        lastNames.add("Schweizer");
        lastNames.add("Keßler");
        lastNames.add("Hagen");
        lastNames.add("Wieland");
        lastNames.add("Born");
        lastNames.add("Merkel");
        lastNames.add("Falk");
        lastNames.add("Busse");
        lastNames.add("Gross");
        lastNames.add("Eichhorn");
        lastNames.add("Greiner");
        lastNames.add("Moritz");
        lastNames.add("Forster");
        lastNames.add("Stumpf");
        lastNames.add("Seidl");
        lastNames.add("Scharf");
        lastNames.add("Hentschel");
        lastNames.add("Buck");
        lastNames.add("Voss");
        lastNames.add("Hartwig");
        lastNames.add("Heil");
        lastNames.add("Eberhardt");
        lastNames.add("Oswald");
        lastNames.add("Lechner");
        lastNames.add("Block");
        lastNames.add("Heim");
        lastNames.add("Steffens");
        lastNames.add("Weigel");
        lastNames.add("Pietsch");
        lastNames.add("Brandl");
        lastNames.add("Schott");
        lastNames.add("Gottschalk");
        lastNames.add("Bertram");
        lastNames.add("Ehlers");
        lastNames.add("Fleischmann");
        lastNames.add("Albers");
        lastNames.add("Weidner");
        lastNames.add("Hiller");
        lastNames.add("Seeger");
        lastNames.add("Geyer");
        lastNames.add("Jürgens");
        lastNames.add("Baumgartner");
        lastNames.add("Mack");
        lastNames.add("Schuler");
        lastNames.add("Appel");
        lastNames.add("Pape");
        lastNames.add("Dorn");
        lastNames.add("Wulf");
        lastNames.add("Opitz");
        lastNames.add("Wiesner");
        lastNames.add("Hecht");
        lastNames.add("Moll");
        lastNames.add("Gabriel");
        lastNames.add("Auer");
        lastNames.add("Engelmann");
        lastNames.add("Singer");
        lastNames.add("Neuhaus");
        lastNames.add("Giese");
        lastNames.add("Schütze");
        lastNames.add("Geisler");
        lastNames.add("Ruf");
        lastNames.add("Heuer");
        lastNames.add("Noll");
        lastNames.add("Scheffler");
        lastNames.add("Sauter");
        lastNames.add("Reimer");
        lastNames.add("Klemm");
        lastNames.add("Schaller");
        lastNames.add("Hempel");
        lastNames.add("Kretschmer");
        lastNames.add("Runge");
        lastNames.add("Springer");
        lastNames.add("Riedl");
        lastNames.add("Steinbach");
        lastNames.add("Michels");
        lastNames.add("Barthel");
        lastNames.add("Pfaff");
        lastNames.add("Kohler");
        lastNames.add("Zahn");
        lastNames.add("Radtke");
        lastNames.add("Neugebauer");
        lastNames.add("Hensel");
        lastNames.add("Winkelmann");
        lastNames.add("Gebauer");
        lastNames.add("Engels");
        lastNames.add("Wichmann");
        lastNames.add("Eichler");
        lastNames.add("Schnell");
        lastNames.add("Weller");
        lastNames.add("Brüggemann");
        lastNames.add("Scholl");
        lastNames.add("Timm");
        lastNames.add("Siegel");
        lastNames.add("Heise");
        lastNames.add("Rösch");
        lastNames.add("Bürger");
        lastNames.add("Hinrichs");
        lastNames.add("Stolz");
        lastNames.add("Walz");
        lastNames.add("Specht");
        lastNames.add("Dick");
        lastNames.add("Geier");
        lastNames.add("Volk");
        lastNames.add("Junker");
        lastNames.add("Prinz");
        lastNames.add("Otte");
        lastNames.add("Schick");
        lastNames.add("Klotz");
        lastNames.add("Haller");
        lastNames.add("Rother");
        lastNames.add("Koller");
        lastNames.add("Börner");
        lastNames.add("Thoma");
        lastNames.add("Drescher");
        lastNames.add("Kempf");
        lastNames.add("Schirmer");
        lastNames.add("Faber");
        lastNames.add("Frenzel");
        lastNames.add("Uhlig");
        lastNames.add("Schnabel");
        lastNames.add("Wirtz");
        lastNames.add("Dürr");
        lastNames.add("Kranz");
        lastNames.add("Kasper");
        lastNames.add("Hausmann");
        lastNames.add("Hagemann");
        lastNames.add("Gerhardt");
        lastNames.add("Lux");
        lastNames.add("Fries");
        lastNames.add("Haug");
        lastNames.add("Endres");
        lastNames.add("Maas");
        lastNames.add("Schürmann");
        lastNames.add("Eberle");
        lastNames.add("Knapp");
        lastNames.add("Eggert");
        lastNames.add("Brauer");
        lastNames.add("Finke");
        lastNames.add("Paulus");
        lastNames.add("Petzold");
        lastNames.add("Hauck");
        lastNames.add("Rath");
        lastNames.add("Elsner");
        lastNames.add("Dreyer");
        lastNames.add("Sievers");
        lastNames.add("Faust");
        lastNames.add("Dittmann");
        lastNames.add("Wehner");
        lastNames.add("Kilian");
        lastNames.add("Sattler");
        lastNames.add("Reichelt");
        lastNames.add("Langner");
        lastNames.add("Rabe");
        lastNames.add("Bremer");
        lastNames.add("Abel");
        lastNames.add("Pütz");
        lastNames.add("Wittig");
        lastNames.add("Kühl");
        lastNames.add("Schober");
        lastNames.add("Maaß");
        lastNames.add("Cordes");
        lastNames.add("Uhl");
        lastNames.add("Kahl");
        lastNames.add("Korn");
        lastNames.add("Harder");
        lastNames.add("Bernhard");
        lastNames.add("Ullmann");
        lastNames.add("Thieme");
        lastNames.add("Klinger");
        lastNames.add("Bohn");
        lastNames.add("Biermann");
        lastNames.add("Vogl");
        lastNames.add("Schütt");
        lastNames.add("Schaefer");
        lastNames.add("Nguyen");
        lastNames.add("Kemper");
        lastNames.add("Knorr");
        lastNames.add("Michaelis");
        lastNames.add("Große");
        lastNames.add("Gerdes");
        lastNames.add("Stöhr");
        lastNames.add("Hartl");
        lastNames.add("Lehner");
        lastNames.add("Mielke");
        lastNames.add("Eggers");
        lastNames.add("Schaaf");
        lastNames.add("Sieber");
        lastNames.add("Melzer");
        lastNames.add("Behr");
        lastNames.add("Weiler");
        lastNames.add("Lippert");
        lastNames.add("Eckhardt");
        lastNames.add("Höfer");
        lastNames.add("Fritzsche");
        lastNames.add("Helbig");
        lastNames.add("Theis");
        lastNames.add("Schlosser");
        lastNames.add("Leonhardt");
        lastNames.add("Ries");
        lastNames.add("Reinhold");
        lastNames.add("Rademacher");
        lastNames.add("Evers");
        lastNames.add("Rudolf");
        lastNames.add("Rost");
        lastNames.add("Horstmann");
        lastNames.add("Hecker");
        lastNames.add("Dreher");
        lastNames.add("Pilz");
        lastNames.add("Junge");
        lastNames.add("Ehrhardt");
        lastNames.add("Matthes");
        lastNames.add("Klug");
        lastNames.add("Kunkel");
        lastNames.add("Steinmetz");
        lastNames.add("Heitmann");
        lastNames.add("Bahr");
        lastNames.add("Augustin");
        lastNames.add("Höhne");
        lastNames.add("Hering");
        lastNames.add("Hellmann");
        lastNames.add("Hildebrand");
        lastNames.add("Trautmann");
        lastNames.add("Amann");
        lastNames.add("Heinrichs");
        lastNames.add("Höhn");
        lastNames.add("Heimann");
        lastNames.add("Lück");
        lastNames.add("Nitsche");
        lastNames.add("Sprenger");
        lastNames.add("Vogler");
        lastNames.add("Claus");
        lastNames.add("Jensen");
        lastNames.add("Blume");
        lastNames.add("Drews");
        lastNames.add("Damm");
        lastNames.add("Hofer");
        lastNames.add("Kurth");
        lastNames.add("Groth");
        lastNames.add("Janke");
        lastNames.add("Heilmann");
        lastNames.add("Hellwig");
        lastNames.add("Just");
        lastNames.add("Wacker");
        lastNames.add("Huth");
        lastNames.add("Jahnke");
        lastNames.add("Strauch");
        lastNames.add("Stenzel");
        lastNames.add("Böhmer");
        lastNames.add("Hertel");
        lastNames.add("Hornung");
        lastNames.add("Götze");
        lastNames.add("Reinhard");
        lastNames.add("Ruppert");
        lastNames.add("Lau");
        lastNames.add("Renz");
        lastNames.add("Sperling");
        lastNames.add("Teichmann");
        lastNames.add("Schönfeld");
        lastNames.add("Späth");
        lastNames.add("Hafner");
        lastNames.add("Alt");
        lastNames.add("Borchert");
        lastNames.add("Rehm");
        lastNames.add("Pohlmann");
        lastNames.add("Pfister");
        lastNames.add("Zink");
        lastNames.add("Roos");
        lastNames.add("Mader");
        lastNames.add("Wille");
        lastNames.add("Schroeder");
        lastNames.add("Heinen");
        lastNames.add("Lotz");
        lastNames.add("Balzer");
        lastNames.add("Schwarze");
        lastNames.add("Westermann");
        lastNames.add("Ebner");
        lastNames.add("Krieg");
        lastNames.add("Schweiger");
        lastNames.add("Bosch");
        lastNames.add("Engler");
        lastNames.add("Schleicher");
        lastNames.add("Pfeffer");
        lastNames.add("Gehrke");
        lastNames.add("Kaminski");
        lastNames.add("Schuh");
        lastNames.add("Clemens");
        lastNames.add("Liedtke");
        lastNames.add("Wessel");
        lastNames.add("Friedrichs");
        lastNames.add("Eisele");
        lastNames.add("Kirchhoff");
        lastNames.add("Reiß");
        lastNames.add("Brockmann");
        lastNames.add("Schöne");
        lastNames.add("Frick");
        lastNames.add("Ulbrich");
        lastNames.add("Trapp");
        lastNames.add("Rößler");
        lastNames.add("Hoyer");
        lastNames.add("Thomsen");
        lastNames.add("Scheer");
        lastNames.add("Wagener");
        lastNames.add("Starke");
        lastNames.add("Korte");
        lastNames.add("Baumeister");
        lastNames.add("Kretzschmar");
        lastNames.add("Veit");
        lastNames.add("Grote");
        lastNames.add("Sachs");
        lastNames.add("Nitschke");
        lastNames.add("Bartel");
        lastNames.add("Schwarzer");
        lastNames.add("Hampel");
        lastNames.add("Bischof");
        lastNames.add("Schweitzer");
        lastNames.add("Seemann");
        lastNames.add("Grau");
        lastNames.add("Lehnert");
        lastNames.add("Orth");
        lastNames.add("Süß");
        lastNames.add("Loos");
        lastNames.add("Stiller");
        lastNames.add("Henze");
        lastNames.add("Lohse");
        lastNames.add("Küster");
        lastNames.add("Baumgärtner");
        lastNames.add("Oppermann");
        lastNames.add("Brendel");
        lastNames.add("Kirschner");
        lastNames.add("Schüller");
        lastNames.add("Wendel");
        lastNames.add("Burmeister");
        lastNames.add("Kastner");
        lastNames.add("Daniel");
        lastNames.add("Menke");
        lastNames.add("Seibert");
        lastNames.add("Widmann");
        lastNames.add("David");
        lastNames.add("Reitz");
        lastNames.add("Kühnel");
        lastNames.add("Diekmann");
        lastNames.add("Steinert");
        lastNames.add("Klatt");
        lastNames.add("Wörner");
        lastNames.add("Wolters");
        lastNames.add("Fürst");
        lastNames.add("Lampe");
        lastNames.add("Heckmann");
        lastNames.add("Wilde");
        lastNames.add("Buchner");
        lastNames.add("Becher");
        lastNames.add("Heider");
        lastNames.add("Grundmann");
        lastNames.add("Schwabe");
        lastNames.add("Hager");
        lastNames.add("Buschmann");
        lastNames.add("Keck");
        lastNames.add("Mühlbauer");
        lastNames.add("Schauer");
        lastNames.add("Petri");
        lastNames.add("Rühl");
        lastNames.add("Eckstein");
        lastNames.add("Schatz");
        lastNames.add("Kolbe");
        lastNames.add("Kling");
        lastNames.add("Knobloch");
        lastNames.add("Otten");
        lastNames.add("Muth");
        lastNames.add("Reinke");
        lastNames.add("Baumgart");
        lastNames.add("Horst");
        lastNames.add("Doll");
        lastNames.add("Kugler");
        lastNames.add("Gläser");
        lastNames.add("Stange");
        lastNames.add("Tietz");
        lastNames.add("Schell");
        lastNames.add("Brüning");
        lastNames.add("Helm");
        lastNames.add("Hacker");
        lastNames.add("Cremer");
        lastNames.add("Riemer");
        lastNames.add("Behnke");
        lastNames.add("Heyer");
        lastNames.add("Reiser");
        lastNames.add("Steinke");
        lastNames.add("Ostermann");
        lastNames.add("Büchner");
        lastNames.add("Häusler");
        lastNames.add("Jacobi");
        lastNames.add("Heuser");
        lastNames.add("Obermeier");
        lastNames.add("Herr");
        lastNames.add("Kübler");
        lastNames.add("Spies");
        lastNames.add("Spindler");
        lastNames.add("Schmidtke");
        lastNames.add("Hermes");
        lastNames.add("Kreuzer");
        lastNames.add("Kock");
        lastNames.add("Stamm");
        lastNames.add("Pauli");
        lastNames.add("Ewald");
        lastNames.add("Hagedorn");
        lastNames.add("Kersten");
        lastNames.add("Weiland");
        lastNames.add("Resch");
        lastNames.add("Neu");
        lastNames.add("Pabst");
        lastNames.add("Kleine");
        lastNames.add("Grün");
        lastNames.add("Janzen");
        lastNames.add("Berthold");
        lastNames.add("Apel");
        lastNames.add("Löhr");
        lastNames.add("Jakobs");
        lastNames.add("Friedl");
        lastNames.add("Ehlert");
        lastNames.add("Bastian");
        lastNames.add("Volz");
        lastNames.add("Fritsche");
        lastNames.add("Cramer");
        lastNames.add("Weinert");
        lastNames.add("Frisch");
        lastNames.add("Grund");
        lastNames.add("Wilms");
        lastNames.add("Scheller");
        lastNames.add("Enders");
        lastNames.add("Mahler");
        lastNames.add("Brandes");
        lastNames.add("Hamm");
        lastNames.add("Wieczorek");
        lastNames.add("Burghardt");
        lastNames.add("Schwartz");
        lastNames.add("Thies");
        lastNames.add("Brück");
        lastNames.add("Stern");
        lastNames.add("Lukas");
        lastNames.add("Rode");
        lastNames.add("Hanisch");
        lastNames.add("Lauterbach");
        lastNames.add("Gehrmann");
        lastNames.add("Yilmaz");
        lastNames.add("Adams");
        lastNames.add("Henn");
        lastNames.add("Merten");
        lastNames.add("Gottwald");
        lastNames.add("Petry");
        lastNames.add("Gehring");
        lastNames.add("Hack");
        lastNames.add("Niemeyer");
        lastNames.add("Backhaus");
        lastNames.add("Rupprecht");
        lastNames.add("Heidrich");
        lastNames.add("Heidenreich");
        lastNames.add("Mende");
        lastNames.add("Volkmann");
        lastNames.add("Hille");
        lastNames.add("Herz");
        lastNames.add("Böttger");
        lastNames.add("Knauer");
        lastNames.add("Körber");
        lastNames.add("Baumgarten");
        lastNames.add("Bucher");
        lastNames.add("Schaub");
        lastNames.add("Michael");
        lastNames.add("Eckardt");
        lastNames.add("Lerch");
        lastNames.add("Jonas");
        lastNames.add("Rahn");
        lastNames.add("Budde");
        lastNames.add("Rösler");
        lastNames.add("Hannemann");
        lastNames.add("Seidler");
        lastNames.add("Schiffer");
        lastNames.add("Sachse");
        lastNames.add("Ochs");
        lastNames.add("Brehm");
        lastNames.add("Hillebrand");
        lastNames.add("Hardt");
        lastNames.add("Zeidler");
        lastNames.add("Wüst");
        lastNames.add("Küpper");
        lastNames.add("Ebeling");
        lastNames.add("Hölscher");
        lastNames.add("Grünewald");
        lastNames.add("Kowalski");
        lastNames.add("Thiemann");
        lastNames.add("Reis");
        lastNames.add("Welsch");
        lastNames.add("Schultze");
        lastNames.add("Sailer");
        lastNames.add("Haack");
        lastNames.add("Ortmann");
        lastNames.add("Meurer");
        lastNames.add("Ebel");
        lastNames.add("Seibel");
        lastNames.add("Kellermann");
        lastNames.add("Köhn");
        lastNames.add("Tiedemann");
        lastNames.add("Kunert");
        lastNames.add("Bräuer");
        lastNames.add("Schaper");
        lastNames.add("Ehrlich");
        lastNames.add("Reif");
        lastNames.add("Aigner");
        lastNames.add("Wulff");
        lastNames.add("Berner");
        lastNames.add("Bormann");
        lastNames.add("Schröer");
        lastNames.add("Armbruster");
        lastNames.add("Eilers");
        lastNames.add("Raabe");
        lastNames.add("Fichtner");
        lastNames.add("Thelen");
        lastNames.add("Bolz");
        lastNames.add("Pahl");
        lastNames.add("Mangold");
        lastNames.add("Scheel");
        lastNames.add("Kratz");
        lastNames.add("Hoch");
        lastNames.add("Backes");
        lastNames.add("Schuhmacher");
        lastNames.add("Reinecke");
        lastNames.add("Zöller");
        lastNames.add("Johannsen");
        lastNames.add("Dieckmann");
        lastNames.add("Drechsler");
        lastNames.add("Emmerich");
        lastNames.add("Rauscher");
        lastNames.add("Post");
        lastNames.add("Weigand");
        lastNames.add("Hill");
        lastNames.add("Andres");
        lastNames.add("Wächter");
        lastNames.add("Stratmann");
        lastNames.add("Wallner");
        lastNames.add("Spengler");
        lastNames.add("Metzner");
        lastNames.add("Merk");
        lastNames.add("Palm");
        lastNames.add("Hopf");
        lastNames.add("Dietze");
        lastNames.add("Kammerer");
        lastNames.add("Krohn");
        lastNames.add("Kleinert");
        lastNames.add("Linder");
        lastNames.add("Henrich");
        lastNames.add("Morgenstern");
        lastNames.add("Rogge");
        lastNames.add("Grube");
        lastNames.add("Grabowski");
        lastNames.add("Wurm");
        lastNames.add("Kummer");
        lastNames.add("Hoff");
        lastNames.add("Paulsen");
        lastNames.add("Ertl");
        lastNames.add("Zorn");
        lastNames.add("Petermann");
        lastNames.add("Küppers");
        lastNames.add("Buchmann");
        lastNames.add("Dreier");
        lastNames.add("Sommerfeld");
        lastNames.add("Bähr");
        lastNames.add("Rosenberger");
        lastNames.add("Reichardt");
        lastNames.add("Reimers");
        lastNames.add("März");
        lastNames.add("Heger");
        lastNames.add("Lenk");
        lastNames.add("Jaeger");
        lastNames.add("Hopp");
        lastNames.add("Habermann");
        lastNames.add("Boldt");
        lastNames.add("Schreier");
        lastNames.add("Ewert");
    }

    private void initLocations() {
        locations.add("Allentsteig");
        locations.add("Altheim");
        locations.add("Althofen");
        locations.add("Amstetten");
        locations.add("Ansfelden");
        locations.add("Attnang-Puchheim");
        locations.add("Bad Aussee");
        locations.add("Bad Hall");
        locations.add("Bad Ischl");
        locations.add("Bad Leonfelden");
        locations.add("Bad Radkersburg");
        locations.add("Bad St. Leonhard im Lavanttal");
        locations.add("Bad Vöslau");
        locations.add("Baden");
        locations.add("Bärnbach");
        locations.add("Berndorf");
        locations.add("Bischofshofen");
        locations.add("Bleiburg");
        locations.add("Bludenz");
        locations.add("Braunau am Inn");
        locations.add("Bregenz");
        locations.add("Bruck an der Leitha");
        locations.add("Bruck an der Mur");
        locations.add("Deutsch-Wagram");
        locations.add("Deutschlandsberg");
        locations.add("Dornbirn");
        locations.add("Drosendorf-Zissersdorf1");
        locations.add("Dürnstein");
        locations.add("Ebenfurth");
        locations.add("Ebreichsdorf");
        locations.add("Eferding");
        locations.add("Eggenburg");
        locations.add("Eisenerz");
        locations.add("Eisenstadt");
        locations.add("Enns");
        locations.add("Fehring");
        locations.add("Feldbach");
        locations.add("Feldkirch");
        locations.add("Feldkirchen in Kärnten");
        locations.add("Ferlach");
        locations.add("Fischamend");
        locations.add("Frauenkirchen");
        locations.add("Freistadt");
        locations.add("Friedberg");
        locations.add("Friesach");
        locations.add("Frohnleiten");
        locations.add("Fürstenfeld");
        locations.add("Gallneukirchen");
        locations.add("Gänserndorf");
        locations.add("Geras");
        locations.add("Gerasdorf bei Wien");
        locations.add("Gföhl");
        locations.add("Gleisdorf");
        locations.add("Gloggnitz");
        locations.add("Gmünd");
        locations.add("Gmünd in Kärnten");
        locations.add("Gmunden");
        locations.add("Graz");
        locations.add("Grein");
        locations.add("Grieskirchen");
        locations.add("Groß-Enzersdorf");
        locations.add("Groß Gerungs");
        locations.add("Groß-Siegharts");
        locations.add("Güssing");
        locations.add("Haag");
        locations.add("Hainburg an der Donau");
        locations.add("Hainfeld");
        locations.add("Hall in Tirol");
        locations.add("Hallein");
        locations.add("Hardegg");
        locations.add("Hartberg");
        locations.add("Heidenreichstein");
        locations.add("Hermagor-Pressegger See");
        locations.add("Herzogenburg");
        locations.add("Hohenems");
        locations.add("Hollabrunn");
        locations.add("Horn");
        locations.add("Imst");
        locations.add("Innsbruck");
        locations.add("Jennersdorf");
        locations.add("Judenburg");
        locations.add("Kapfenberg");
        locations.add("Kindberg");
        locations.add("Kirchdorf an der Krems");
        locations.add("Kirchschlag in der Buckligen Welt");
        locations.add("Kitzbühel");
        locations.add("Klagenfurt am Wörthersee");
        locations.add("Klosterneuburg");
        locations.add("Knittelfeld");
        locations.add("Köflach");
        locations.add("Korneuburg");
        locations.add("Krems an der Donau");
        locations.add("Kufstein");
        locations.add("Laa an der Thaya");
        locations.add("Laakirchen");
        locations.add("Landeck");
        locations.add("Langenlois");
        locations.add("Leibnitz");
        locations.add("Leoben");
        locations.add("Leonding");
        locations.add("Lienz");
        locations.add("Liezen");
        locations.add("Lilienfeld");
        locations.add("Linz");
        locations.add("Litschau");
        locations.add("Maissau");
        locations.add("Mank");
        locations.add("Mannersdorf am Leithagebirge");
        locations.add("Marchegg");
        locations.add("Marchtrenk");
        locations.add("Mariazell");
        locations.add("Mattersburg");
        locations.add("Mattighofen");
        locations.add("Mautern an der Donau");
        locations.add("Melk");
        locations.add("Mittersill");
        locations.add("Mistelbach");
        locations.add("Mödling");
        locations.add("Murau");
        locations.add("Mureck");
        locations.add("Mürzzuschlag");
        locations.add("Neufeld an der Leitha");
        locations.add("Neulengbach");
        locations.add("Neumarkt am Wallersee");
        locations.add("Neunkirchen");
        locations.add("Neusiedl am See");
        locations.add("Oberndorf bei Salzburg");
        locations.add("Oberpullendorf");
        locations.add("Oberwart");
        locations.add("Oberwölz");
        locations.add("Perg");
        locations.add("Peuerbach");
        locations.add("Pinkafeld");
        locations.add("Pöchlarn");
        locations.add("Poysdorf");
        locations.add("Pregarten");
        locations.add("Pressbaum");
        locations.add("Pulkau");
        locations.add("Purbach am Neusiedler See");
        locations.add("Purkersdorf");
        locations.add("Raabs an der Thaya");
        locations.add("Radenthein");
        locations.add("Radstadt");
        locations.add("Rattenberg");
        locations.add("Retz");
        locations.add("Ried im Innkreis");
        locations.add("Rohrbach-Berg");
        locations.add("Rottenmann");
        locations.add("Rust");
        locations.add("Saalfelden am Steinernen Meer");
        locations.add("Salzburg");
        locations.add("Sankt Andrä");
        locations.add("St. Johann im Pongau");
        locations.add("St. Pölten");
        locations.add("St. Valentin");
        locations.add("Sankt Veit an der Glan");
        locations.add("Schärding");
        locations.add("Scheibbs");
        locations.add("Schladming");
        locations.add("Schrattenthal");
        locations.add("Schrems");
        locations.add("Schwanenstadt");
        locations.add("Schwaz");
        locations.add("Schwechat");
        locations.add("Seekirchen am Wallersee");
        locations.add("Spielberg");
        locations.add("Spittal an der Drau");
        locations.add("Stadtschlaining");
        locations.add("Steyr");
        locations.add("Steyregg");
        locations.add("Stockerau");
        locations.add("Straßburg");
        locations.add("Ternitz");
        locations.add("Traiskirchen");
        locations.add("Traismauer");
        locations.add("Traun");
        locations.add("Trieben");
        locations.add("Trofaiach");
        locations.add("Tulln an der Donau");
        locations.add("Villach");
        locations.add("Vils");
        locations.add("Vöcklabruck");
        locations.add("Voitsberg");
        locations.add("Völkermarkt");
        locations.add("Waidhofen an der Thaya");
        locations.add("Waidhofen an der Ybbs");
        locations.add("Weitra");
        locations.add("Weiz");
        locations.add("Wels");
        locations.add("Wien");
        locations.add("Wiener Neustadt");
        locations.add("Wieselburg");
        locations.add("Wilhelmsburg");
        locations.add("Wolfsberg");
        locations.add("Wolkersdorf im Weinviertel");
        locations.add("Wörgl");
        locations.add("Ybbs an der Donau");
        locations.add("Zell am See");
        locations.add("Zeltweg");
        locations.add("Zistersdorf");
        locations.add("Zwettl-Niederösterreich");
    }

    private void initClassifications() {
        classifications.add(new ExtendedClassification(null, new BigDecimal(-10), "Groceries"));
        classifications.add(new ExtendedClassification(null, new BigDecimal(-700), "Travel"));
        classifications.add(new ExtendedClassification(null, new BigDecimal(-30), "Transportation"));
        classifications.add(new ExtendedClassification(null, new BigDecimal(-40), "Cloths"));
        classifications.add(new ExtendedClassification(null, new BigDecimal(-29.12), "Bars"));
        classifications.add(new ExtendedClassification(null, new BigDecimal(-15), "Restaurants"));
        classifications.add(new ExtendedClassification(null, new BigDecimal(-30), "Cash"));
        classifications.add(new ExtendedClassification(null, new BigDecimal(-20), "Miscellaneous"));
        classifications.add(new ExtendedClassification(null, new BigDecimal(-7), "Education"));
        classifications.add(new ExtendedClassification(null, new BigDecimal(-30), "Health"));
        classifications.add(new ExtendedClassification(null, new BigDecimal(-100), "Investment", -0.25, 1.0));
    }

    private void addThresholds(ExtendedCustomer c) {
        for (Classification cl : c.getDefaultClassifications()) {
            Threshold t = new Threshold();
            t.setClassification(cl.getClassification());
            t.setThresholdDate(currentDate);
            t.setWindowSize(2678400000L);

            if (cl.getAmount().compareTo(new BigDecimal(0)) > 0) {
                t.setThreshold(cl.getAmount().multiply(new BigDecimal(-1)));

                c.addThreshold(t);
            } else {
                t.setThreshold(cl.getAmount().multiply(new BigDecimal(2)));

                c.addThreshold(t);
            }
        }

        Threshold t = new Threshold();
        t.setClassification("absoluteThresholdNegative");
        t.setThreshold(new BigDecimal(-200));
        c.addThreshold(t);
        t = new Threshold();
        t.setClassification("absoluteThresholdPositive");
        t.setThreshold(new BigDecimal(200));
        c.addThreshold(t);
    }

    private void initCustomers() {
        for (long i = 0; i < amountOfCustomers; i++) {
            ExtendedCustomer c = new ExtendedCustomer();
            c.setId(i);
            if (i % 2 == 0) {
                c.setGender(Gender.Female);
                c.setFirstname(femaleNames.get(randomGen.nextInt(femaleNames.size())));
            } else {
                c.setGender(Gender.Male);
                c.setFirstname(maleNames.get(randomGen.nextInt(maleNames.size())));
            }
            c.setLastname(lastNames.get(randomGen.nextInt(lastNames.size())));
            c.setLocation(locations.get(randomGen.nextInt(locations.size())));

            LocalDate now = LocalDate.now();
            long min = now.minusYears(78).toEpochDay();
            long max = now.minusYears(18).toEpochDay();
            long randomDay = min + randomGen.nextInt((int) (max - min));

            c.setDateOfBirth(LocalDate.ofEpochDay(randomDay));

            double income = 0;
            if (i % 10 != 0) {
                //i.e. 10% don't have an income
                income = 500 + (10000 - 500) * randomGen.nextDouble();
                c.addDefaultClassification(new Classification(c, new BigDecimal(income), "Income"));
            }
            if (income > 0 && i % 10 < 9) {
                double upper = income * 0.6;
                double rent = (200 + (upper - 200) * randomGen.nextDouble()) * -1d;
                c.addDefaultClassification(new Classification(c, new BigDecimal(income), "Rent"));
            }
            if (income > 0 && income < 850) {
                c.addDefaultClassification(new Classification(c, new BigDecimal(850 - income), "Welfare"));
            }
            if (i % 10 == 0) {
                c.addDefaultClassification(new Classification(c, new BigDecimal(200), "Child support"));
            }
            if (i % 50 != 0) {
                c.addDefaultClassification(new Classification(null, new BigDecimal(-15), "Telephone"));
            }

            addThresholds(c);

            customers.add(c);
        }
    }

    @Override
    public List<ExtendedCustomer> getCustomers() {
        return customers;
    }

    private void addThresholdClassifications(List<Classification> result, ExtendedCustomer c) {
        CustomerData cd = getCustomerData(c);
        if (counter % 20 == 0) {
            BigDecimal val = cd.getBalance().min(new BigDecimal(199));
            Classification cll = new Classification();
            cll.setClassification("absoluteThresholdNegative");
            cll.setClassificationDate(currentDate);
            cll.setCustomer(c);
            cll.setAmount(val.multiply(new BigDecimal(-1)));
            result.add(cll);

            cll = new Classification();
            cll.setClassification("absoluteThresholdPositive");
            cll.setClassificationDate(currentDate);
            cll.setCustomer(c);
            cll.setAmount(val);
            result.add(cll);
        }

        List<Threshold> ts = c.getThresholds();
        if (counter % 16 == 0 && ts.size() > 0) {
            Threshold t = ts.get(randomGen.nextInt(ts.size()));
            Classification cl = new Classification();
            cl.setClassification(t.getClassification());
            cl.setClassificationDate(currentDate);
            cl.setCustomer(c);
            cl.setAmount(t.getThreshold());
            result.add(cl);
        }
    }

    private CustomerData getCustomerData(Customer c) {
        CustomerData cd = customerDataMap.get(c.getId());

        if (cd == null) {
            cd = new CustomerData();
            customerDataMap.put(c.getId(), cd);
        }

        return cd;
    }

    @Override
    public List<Classification> generate() {
        List<Classification> result = new ArrayList<>();
        ExtendedCustomer c = customers.get(randomGen.nextInt(customers.size()));
        CustomerData cd = getCustomerData(c);
        ExtendedClassification cl = classifications.get(randomGen.nextInt(classifications.size()));
        cl.setCustomer(c);
        cl.setClassificationDate(currentDate);

        BigDecimal upper = cl.getAmount().multiply(new BigDecimal(cl.getUpperPercentage()));
        BigDecimal lower = cl.getAmount().multiply(new BigDecimal(cl.getLowerPercentage()));
        BigDecimal rand = new BigDecimal(randomGen.nextDouble()).remainder(upper.subtract(lower));
        cl.setAmount(lower.add(rand).round(new MathContext(5, RoundingMode.CEILING)));

        cd.setBalance(cd.getBalance().add(cl.getAmount()));
        cd.setTransactionCount(cd.getTransactionCount() + 1);

        result.add(cl);

        logger.debug("Customer " + c.getId() + " had " + cd.getTransactionCount() + " transactions and has a balance"
                + " of " + cd.getBalance());

        currentDate = currentDate.plusSeconds(secondsBetweenClassifications);

        if (!cl.getClassificationDate().getMonth().equals(currentDate.getMonth())) {
            for (ExtendedCustomer customer : customers) {
                for (Classification classification : customer.getDefaultClassifications()) {
                    CustomerData cdd = getCustomerData(classification.getCustomer());
                    cdd.setTransactionCount(cdd.getTransactionCount() + 1);
                    cdd.setBalance(cdd.getBalance().add(classification.getAmount()));
                    classification.setClassificationDate(currentDate);
                    result.add(classification);

                    logger.debug("Customer " + classification.getCustomer().getId() + " had "
                            + cdd.getTransactionCount() + " transactions and has a balance"
                            + " of " + cdd.getBalance());
                }
            }
        }

        addThresholdClassifications(result, c);

        counter++;

        return result;
    }
}
